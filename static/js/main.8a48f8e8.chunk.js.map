{"version":3,"sources":["components/firebase/Firebase.js","components/Login.js","App.js","serviceWorker.js","components/ButtonLogout.js","components/Navbar.js","components/Home.js","index.js"],"names":["ConfigFire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeEmail","bind","assertThisInitialized","handleChangePass","handleSignIn","state","email","pass","event","setState","target","value","auth","signInWithEmailAndPassword","then","history","replace","catch","error","console","log","code","message","react_default","a","createElement","className","data-jarallax","data-wow-delay","type","id","htmlFor","onClick","Component","withRouter","App","src_components_Login","Boolean","window","location","hostname","match","ButtonLogout","handleLogout","signOut","href","Home","data-toggle","data-target","aria-controls","aria-expanded","aria-label","components_ButtonLogout","components_Navbar","ReactDOM","render","BrowserRouter","basename","process","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6QAWMA,SAAaC,EAASC,cATb,CACXC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,yBCHjBC,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,kBAAoBP,EAAKO,kBAAkBC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKU,iBAAmBV,EAAKU,iBAAiBF,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKW,aAAeX,EAAKW,aAAaH,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAEpBA,EAAKY,MAAQ,CACTC,MAAO,GACPC,KAAM,IATId,iFAaAe,GACdZ,KAAKa,SAAS,CAACH,MAAOE,EAAME,OAAOC,iDAGtBH,GACbZ,KAAKa,SAAS,CAACF,KAAMC,EAAME,OAAOC,+CAIlC7B,EAAW8B,OAAOC,2BAA4BjB,KAAKS,MAAMC,MAASV,KAAKS,MAAME,MAC5EO,KACGlB,KAAKJ,MAAMuB,QAAQC,QAAQ,UAE9BC,MAAM,SAASC,GACZC,QAAQC,IAAIF,GAGIA,EAAMG,KACHH,EAAMI,2CAM7B,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBC,gBAAc,kBAC/CJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0EACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBE,iBAAe,QACrDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,cAIJH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,QAAQC,GAAG,QAAQJ,UAAU,0BACzCH,EAAAC,EAAAC,cAAA,SAAOM,QAAQ,SAAf,YAEJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWC,GAAG,WAAWJ,UAAU,2BAC/CH,EAAAC,EAAAC,cAAA,SAAOM,QAAQ,SAAf,mBAEJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASH,UAAU,iCAAiCM,QAASpC,KAAKQ,cAA/E,WAEAmB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yEApE/BO,aAqFLC,cAAY3C,GC7EZ4C,mLARX,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAD,cAJUH,aCSEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+ECdAC,cACF,SAAAA,EAAYlD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACdjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KAEDmD,aAAelD,EAAKkD,aAAa1C,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAEpBA,EAAKY,MAAQ,CACTC,MAAO,GACPC,KAAM,IAPId,8EAYdX,EAAW8B,OAAOgC,UACjB9B,KACGlB,KAAKJ,MAAMuB,QAAQC,QAAQ,YAE9BC,MAAM,SAASC,uCAKhB,OACIK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWmB,KAAK,UAAUb,QAASpC,KAAK+C,cAArD,2BAvBeV,aA4BZC,cAAWQ,GC3BpBI,qBACF,SAAAA,EAAYtD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACdrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAEDmD,aAAelD,EAAKkD,aAAa1C,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAHNA,8EAOd0B,QAAQC,IAAI,kDAKZ,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAemB,KAAK,KAAjC,UACAtB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBG,KAAK,SAASkB,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ5B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BI,GAAG,aACzCP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWmB,KAAK,KAA7B,UAAwCtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAE5CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWmB,KAAK,KAA7B,SAEJtB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWmB,KAAK,KAA7B,kBAEJtB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAC2B,EAAD,iBA/BLnB,cAwCJC,cAAWY,GCzCpBA,mLAeE,OACIvB,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACfH,EAAAC,EAAAC,cAAC4B,EAAD,cAjBGpB,aAuBJC,cAAWY,GCpB1BQ,IAASC,OACLhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAeC,SAAUC,SACrBnC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAc3B,IACtCZ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,QAAQC,UAAchB,IAC1CvB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,UAAUC,UAAc3B,MAEtC4B,SAASC,eAAe,SJ+GpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrD,KAAK,SAAAsD,GACjCA,EAAaC","file":"static/js/main.8a48f8e8.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB27y1gdYay2HLN0R3YNB_Cu7jl4jWAoRU\",\r\n    authDomain: \"variosproyectos-35b23.firebaseapp.com\",\r\n    databaseURL: \"https://variosproyectos-35b23.firebaseio.com\",\r\n    projectId: \"variosproyectos-35b23\",\r\n    storageBucket: \"variosproyectos-35b23.appspot.com\",\r\n    messagingSenderId: \"317508774373\"\r\n};\r\n\r\nconst ConfigFire = firebase.initializeApp(config);\r\n\r\nexport{ConfigFire};","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport  {ConfigFire} from './firebase/Firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n        this.handleChangePass = this.handleChangePass.bind(this);\r\n        this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            pass: '',\r\n        };\r\n    }\r\n\r\n    handleChangeEmail(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    handleChangePass(event) {\r\n        this.setState({pass: event.target.value});\r\n    }\r\n\r\n    handleSignIn(){\r\n        ConfigFire.auth().signInWithEmailAndPassword((this.state.email), (this.state.pass))\r\n        .then(\r\n            this.props.history.replace('/Home') \r\n        )\r\n        .catch(function(error) {\r\n            console.log(error);\r\n            \r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // ...\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header>\r\n                <div className=\"view jarallax style\" data-jarallax='{\"speed\": 0.2}'>\r\n                    <div className=\"mask rgba-black-light d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-6 mb-12 white-text text-center formLogin\">\r\n                        \r\n                            <div className=\"card wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                            <div className=\"card-body\">\r\n                            \r\n                                <div className=\"text-center\">\r\n                                <h3 className=\"white-text\">\r\n                                    <p className=\"title colorFondo\">* HERE *</p>\r\n                                </h3>\r\n                                </div>\r\n                            \r\n                                <form className='novalidate'>\r\n                                <div className=\"md-form\">\r\n                                    <input type=\"email\" id=\"email\" className=\"form-control sizeText\"/>\r\n                                    <label htmlFor=\"form2\">Correo:</label>\r\n                                </div>\r\n                                <div className=\"md-form\">\r\n                                    <input type=\"password\" id=\"password\" className=\" form-control sizeText\"/>\r\n                                    <label htmlFor=\"form4\">Contrase√±a:</label>\r\n                                </div>\r\n                                <div className=\"text-center mt-4\">\r\n                                    <button type=\"submit\" className=\"btn colorFondo color sizeBoton\" onClick={this.handleSignIn}\r\n                                    >Iniciar</button>\r\n                                    <hr className=\"hr-light mb-3 mt-2 ancho\"/>\r\n                                    <div className=\"inline-ul text-center d-flex justify-content-center\">\r\n                                    \r\n                                    </div>\r\n                                </div>\r\n                                </form>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </header>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter (Login);","import React, { Component } from 'react';\r\nimport Login from './components/Login';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Login />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {ConfigFire} from './firebase/Firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ButtonLogout extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n\r\n        this.state = {\r\n            email: '',\r\n            pass: '',\r\n        };\r\n    }\r\n\r\n    handleLogout(){\r\n        ConfigFire.auth().signOut()\r\n        .then(\r\n            this.props.history.replace('/Inicio')\r\n        )\r\n        .catch(function(error) {\r\n            // An error happened.\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <a className=\"nav-link\" href=\"#logout\" onClick={this.handleLogout}>Cerrar sesi√≥n</a>\r\n            // <button type=\"button\" className=\"btn btn-secondary ml-auto\" onClick={this.handleLogout}>Cerrar sesi√≥n</button>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(ButtonLogout);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ButtonLogout from './ButtonLogout';\r\nimport './Navbar.css';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    handleLogout(){\r\n        console.log('cierra sesion');\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"#\">Inicio <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Mapa</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Lista alumnos</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <ButtonLogout />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);    ","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\n\r\nclass Home extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n    //     this.handleChangePass = this.handleChangePass.bind(this);\r\n    //     this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n    //     this.state = {\r\n    //         email: null,\r\n    //         pass: '',\r\n    //     };\r\n    // }\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"container\">\r\n                <Navbar />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Home from './components/Home';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div>\r\n            <Route exact path = '/' component = { App } />\r\n            <Route exact path = '/Home' component = { Home } />\r\n            <Route exact path = '/Inicio' component = { App } />\r\n        </div>\r\n</BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}